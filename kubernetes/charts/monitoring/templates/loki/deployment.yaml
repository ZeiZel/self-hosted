{{- if .Values.loki.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: loki
  namespace: {{ .Values.namespace }}
  labels:
    app: loki
spec:
  replicas: {{ .Values.loki.replicaCount }}
  selector:
    matchLabels:
      app: loki
  template:
    metadata:
      labels:
        app: loki
      {{- if .Values.consul.enabled }}
      annotations:
        consul.hashicorp.com/connect-inject: "true"
        consul.hashicorp.com/connect-service: "loki"
        consul.hashicorp.com/connect-service-port: "3100"
      {{- end }}
    spec:
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}

      containers:
        - name: loki
          image: {{ .Values.loki.image }}
          imagePullPolicy: IfNotPresent

          args:
            - -config.file=/etc/loki/loki-config.yaml

          ports:
            - containerPort: 3100
              name: http

          resources:
            {{- toYaml .Values.loki.resources | nindent 12 }}

          volumeMounts:
            - name: config
              mountPath: /etc/loki
            - name: data
              mountPath: /loki

          livenessProbe:
            httpGet:
              path: /ready
              port: 3100
            initialDelaySeconds: 30
            periodSeconds: 10

          readinessProbe:
            httpGet:
              path: /ready
              port: 3100
            initialDelaySeconds: 10
            periodSeconds: 5

      volumes:
        - name: config
          configMap:
            name: loki-config
        - name: data
          persistentVolumeClaim:
            claimName: loki-data
{{- end }}
