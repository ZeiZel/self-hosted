{{- if .Values.grafana.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: {{ .Values.namespace }}
  labels:
    app: grafana
spec:
  replicas: {{ .Values.grafana.replicaCount }}
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
      {{- if .Values.consul.enabled }}
      annotations:
        consul.hashicorp.com/connect-inject: "true"
        consul.hashicorp.com/connect-service: "grafana"
        consul.hashicorp.com/connect-service-port: "3000"
      {{- end }}
    spec:
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}

      containers:
        - name: grafana
          image: {{ .Values.grafana.image }}
          imagePullPolicy: IfNotPresent

          ports:
            - containerPort: 3000
              name: http

          env:
            - name: GF_SECURITY_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  name: grafana-secrets
                  key: admin-user
            - name: GF_SECURITY_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: grafana-secrets
                  key: admin-password
            - name: GF_USERS_ALLOW_SIGN_UP
              value: "false"
            - name: GF_SERVER_ROOT_URL
              value: "http://grafana.{{ .Values.ingress.hosts.grafana.host }}/"
            - name: GF_THEME_DEFAULT
              value: {{ .Values.grafana.theme }}

          resources:
            {{- toYaml .Values.grafana.resources | nindent 12 }}

          volumeMounts:
            - name: provisioning
              mountPath: /etc/grafana/provisioning
            - name: storage
              mountPath: /var/lib/grafana

          livenessProbe:
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 30
            periodSeconds: 10

          readinessProbe:
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 10
            periodSeconds: 5

      volumes:
        - name: provisioning
          configMap:
            name: grafana-provisioning
        - name: storage
          persistentVolumeClaim:
            claimName: grafana-storage
{{- end }}
