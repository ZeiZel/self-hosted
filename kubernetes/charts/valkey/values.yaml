# Namespace
namespace: code

# ValKey
image:
  repository: valkey/valkey
  tag: "8.1.3"
  pullPolicy: IfNotPresent

# Architecture (standalone or replication)
architecture: replication

# Master config
master:
  enabled: true
  replicaCount: 1

  service:
    type: ClusterIP
    port: 6379

  resources:
    limits:
      cpu: 1000m
      memory: 1Gi
    requests:
      cpu: 500m
      memory: 512Mi

  # Persistent Storage for Master
  persistence:
    enabled: true
    storageClass: standard
    accessMode: ReadWriteOnce
    size: 20Gi
    mountPath: /data

# Replica config
replica:
  enabled: true
  replicaCount: 2

  service:
    type: ClusterIP
    port: 6379

  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 250m
      memory: 256Mi

  # Persistent Storage for Replicas
  persistence:
    enabled: true
    storageClass: standard
    accessMode: ReadWriteOnce
    size: 20Gi
    mountPath: /data

# Authentication
auth:
  enabled: false
  password: ""  # for disabling - empty

# Persistence config
persistence:
  # Type: RDB, AOF or both
  type: RDB

  # RDB Snapshotting
  rdb:
    enabled: true
    interval: 900  # secs
    minChanges: 1

  # AOF (Append-Only File)
  aof:
    enabled: false
    fsync: everysec

# Memory config
memory:
  maxMemory: "512mb"
  maxMemoryPolicy: "noeviction"  # noeviction, allkeys-lru, etc.

# Networking
service:
  clusterIP: true
  headless: true
  headlessName: valkey-headless

# Ingress (optioanl, only for monitoring/UI)
ingress:
  enabled: false
  className: traefik
  host: valkey.local

# Affinity for delivered replicas
affinity:
  enabled: true
  podAntiAffinity: preferred  # preferred or required

# Security
securityContext:
  runAsUser: 999
  runAsGroup: 999
  fsGroup: 999

# Health checks
probes:
  liveness:
    enabled: true
    initialDelaySeconds: 30
    periodSeconds: 10
  readiness:
    enabled: true
    initialDelaySeconds: 10
    periodSeconds: 5

# Logging
logLevel: notice  # debug, verbose, notice, warning
