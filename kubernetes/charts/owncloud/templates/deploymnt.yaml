apiVersion: apps/v1
kind: Deployment
metadata:
  name: owncloud
  namespace: {{ .Values.namespace }}
  labels:
    app: owncloud
spec:
  replicas: {{ .Values.owncloud.replicaCount }}
  selector:
    matchLabels:
      app: owncloud
  template:
    metadata:
      labels:
        app: owncloud
      {{- if .Values.consul.enabled }}
      annotations:
        consul.hashicorp.com/connect-inject: "true"
        consul.hashicorp.com/connect-service: "owncloud"
        consul.hashicorp.com/connect-service-port: "8080"
        consul.hashicorp.com/service-tags: "{{ join "," .Values.consul.tags }}"
      {{- end }}
    spec:
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}

      serviceAccountName: owncloud

      containers:
        - name: owncloud
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}

          ports:
            - containerPort: 8080
              name: http

          envFrom:
            - secretRef:
                name: owncloud-secrets
            - configMapRef:
                name: owncloud-config

          env:
            - name: OWNCLOUD_DOMAIN
              value: "{{ .Values.owncloud.config.domain }}"

          resources:
            {{- toYaml .Values.owncloud.resources | nindent 12 }}

          volumeMounts:
            - name: files
              mountPath: {{ .Values.persistence.files.mountPath }}
            - name: config
              mountPath: {{ .Values.persistence.config.mountPath }}
            - name: owncloud-config
              mountPath: /etc/templates

          {{- if .Values.probes.liveness.enabled }}
          livenessProbe:
            httpGet:
              path: {{ .Values.probes.liveness.path }}
              port: 8080
            initialDelaySeconds: {{ .Values.probes.liveness.initialDelaySeconds }}
            periodSeconds: {{ .Values.probes.liveness.periodSeconds }}
          {{- end }}

          {{- if .Values.probes.readiness.enabled }}
          readinessProbe:
            httpGet:
              path: {{ .Values.probes.readiness.path }}
              port: 8080
            initialDelaySeconds: {{ .Values.probes.readiness.initialDelaySeconds }}
            periodSeconds: {{ .Values.probes.readiness.periodSeconds }}
          {{- end }}

      initContainers:
        # Ожидание PostgreSQL
        - name: wait-for-postgresql
          image: postgres:15-alpine
          command:
            - sh
            - -c
            - |
              until psql -h {{ .Values.postgresql.host }} -U {{ .Values.postgresql.username }} -d {{ .Values.postgresql.database }} -c "SELECT 1" > /dev/null 2>&1; do
                echo "Waiting for PostgreSQL..."
                sleep 5
              done
              echo "PostgreSQL is ready!"
          env:
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: owncloud-secrets
                  key: OWNCLOUD_DB_PASSWORD

        # Ожидание Redis
        {{- if .Values.redis.enabled }}
        - name: wait-for-redis
          image: redis:7-alpine
          command:
            - sh
            - -c
            - |
              until redis-cli -h {{ .Values.redis.host }} -p {{ .Values.redis.port }} ping > /dev/null 2>&1; do
                echo "Waiting for Redis..."
                sleep 5
              done
              echo "Redis is ready!"
        {{- end }}

      volumes:
        - name: files
          persistentVolumeClaim:
            claimName: owncloud-files
        - name: config
          persistentVolumeClaim:
            claimName: owncloud-config
        - name: owncloud-config
          configMap:
            name: owncloud-config
