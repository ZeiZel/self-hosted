apiVersion: v1
kind: ConfigMap
metadata:
  name: authentik-config
  namespace: {{ .Values.namespace }}
data:
  AUTHENTIK_LOG_LEVEL: "{{ .Values.authentik.logLevel }}"
  AUTHENTIK_AVATARS: "{{ .Values.authentik.avatars }}"

  # ========== PostgreSQL ==========
  AUTHENTIK_POSTGRESQL__HOST: "{{ .Values.postgresql.host }}"
  AUTHENTIK_POSTGRESQL__PORT: "{{ .Values.postgresql.port }}"
  AUTHENTIK_POSTGRESQL__USER: "{{ .Values.postgresql.username }}"
  AUTHENTIK_POSTGRESQL__NAME: "{{ .Values.postgresql.database }}"
  AUTHENTIK_POSTGRESQL__SSLMODE: "{{ if .Values.postgresql.ssl }}require{{ else }}disable{{ end }}"

  # ========== ValKey ==========
  AUTHENTIK_REDIS__HOST: "{{ .Values.valkey.host }}"
  AUTHENTIK_REDIS__PORT: "{{ .Values.valkey.port }}"
  AUTHENTIK_REDIS__DB: "{{ .Values.valkey.database }}"

  # Email
  AUTHENTIK_EMAIL__HOST: "{{ .Values.authentik.email.host }}"
  AUTHENTIK_EMAIL__PORT: "{{ .Values.authentik.email.port }}"
  AUTHENTIK_EMAIL__USERNAME: "{{ .Values.authentik.email.username }}"
  AUTHENTIK_EMAIL__USE_TLS: "{{ .Values.authentik.email.useTls }}"
  AUTHENTIK_EMAIL__USE_SSL: "{{ .Values.authentik.email.useSsl }}"
  AUTHENTIK_EMAIL__TIMEOUT: "{{ .Values.authentik.email.timeout }}"
  AUTHENTIK_EMAIL__FROM: "{{ .Values.authentik.email.from }}"

  # Error Reporting
  AUTHENTIK_ERROR_REPORTING__ENABLED: "{{ .Values.authentik.errorReporting.enabled }}"
  AUTHENTIK_ERROR_REPORTING__ENVIRONMENT: "{{ .Values.authentik.errorReporting.environment }}"
  AUTHENTIK_ERROR_REPORTING__SEND_PII: "{{ .Values.authentik.errorReporting.sendPii }}"
