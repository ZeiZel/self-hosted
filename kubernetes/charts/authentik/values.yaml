# Namespace
namespace: authentik

# Authentik
image:
  repository: ghcr.io/goauthentik/server
  tag: "2025.1.0"
  pullPolicy: IfNotPresent

# Authentik server config
server:
  replicas: 1
  service:
    type: ClusterIP
    port: 80
    httpsPort: 443
  resources:
    limits:
      cpu: 1000m
      memory: 1Gi
    requests:
      cpu: 500m
      memory: 512Mi

# Authentik Worker (background tasks)
worker:
  replicas: 1
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 250m
      memory: 256Mi

# Authentik
authentik:
  logLevel: info
  secretKey: "change-me-to-a-random-string-min-50-chars"
  bootstrapPassword: "changeme"
  bootstrapToken: "changeme"
  avatars: gravatar
  errorReporting:
    enabled: false
    environment: kubernetes
    sendPii: false

  # Email
  email:
    host: smtp.gmail.com
    port: 587
    username: "your-email@gmail.com"
    password: "your-app-password"
    useTls: true
    useSsl: false
    timeout: 30
    from: "authentik@example.com"

# ========== external PostgreSQL ==========
postgresql:
  external: true
  host: "postgresql.code.svc.cluster.local"
  port: 5432
  username: "authentik"
  password: "changeme-postgres"
  database: "authentik"
  ssl: false
  # if required SSL:
  # ssl: true
  # sslMode: "require"

# ========== using ValKey (instead of Redis) ==========
valkey:
  enabled: true
  host: "valkey.code.svc.cluster.local"
  port: 6379
  password: ""
  database: 0

# Authentik Persistent Storage (for media, templates, certs)
persistence:
  enabled: true
  storageClass: standard
  accessMode: ReadWriteOnce

  # Media (user uploads, icons)
  media:
    enabled: true
    size: 10Gi
    mountPath: /media

  # Custom templates
  templates:
    enabled: true
    size: 5Gi
    mountPath: /templates

  # Certs
  certs:
    enabled: true
    size: 2Gi
    mountPath: /certs

# Ingress through Traefik
ingress:
  enabled: true
  className: traefik
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: web,websecure
    traefik.ingress.kubernetes.io/router.tls: "true"

  hosts:
    - host: authentik.local
      paths:
        - path: /
          pathType: Prefix
        - path: /outpost.goauthentik.io/
          pathType: Prefix

  tls:
    enabled: true
    secretName: authentik-tls

# Security
securityContext:
  runAsUser: 1000
  runAsGroup: 1000
  fsGroup: 1000

# Probes
livenessProbe:
  enabled: true
  path: /-/health/live/
  initialDelaySeconds: 50
  periodSeconds: 10

readinessProbe:
  enabled: true
  path: /-/health/ready/
  initialDelaySeconds: 50
  periodSeconds: 10

# Environment envs
env:
  AUTHENTIK_LOG_LEVEL: "info"
  AUTHENTIK_LISTEN__HTTP__TRUSTED_PROXIES: "10.0.0.0/8"
