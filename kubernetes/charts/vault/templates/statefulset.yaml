apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: vault
  namespace: {{ .Values.namespace }}
  labels:
    app: vault
spec:
  serviceName: vault-internal
  replicas: {{ .Values.server.replicaCount }}
  selector:
    matchLabels:
      app: vault
  template:
    metadata:
      labels:
        app: vault
      {{- if .Values.consul.enabled }}
      annotations:
        consul.hashicorp.com/connect-inject: "true"
        consul.hashicorp.com/connect-service: "vault"
        consul.hashicorp.com/connect-service-port: "8200"
      {{- end }}
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - vault
                topologyKey: kubernetes.io/hostname

      serviceAccountName: vault
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}

      containers:
        - name: vault
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}

          args:
            - "server"
            - "-config=/vault/config/vault.hcl"

          ports:
            - containerPort: 8200
              name: api
            - containerPort: 8201
              name: cluster

          env:
            - name: VAULT_LOG_LEVEL
              value: "info"
            - name: VAULT_ADDR
              value: "http://127.0.0.1:8200"
            - name: VAULT_API_ADDR
              value: "http://$(POD_IP):8200"
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: VAULT_RAFT_NODE_ID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name

          resources:
            {{- toYaml .Values.server.resources | nindent 12 }}

          volumeMounts:
            - name: config
              mountPath: /vault/config
            - name: data
              mountPath: /vault/data
            - name: audit
              mountPath: /vault/logs

          {{- if .Values.probes.liveness.enabled }}
          livenessProbe:
            httpGet:
              path: /v1/sys/health
              port: 8200
              scheme: HTTP
            initialDelaySeconds: {{ .Values.probes.liveness.initialDelaySeconds }}
            periodSeconds: {{ .Values.probes.liveness.periodSeconds }}
          {{- end }}

          {{- if .Values.probes.readiness.enabled }}
          readinessProbe:
            httpGet:
              path: /v1/sys/health
              port: 8200
              scheme: HTTP
            initialDelaySeconds: {{ .Values.probes.readiness.initialDelaySeconds }}
            periodSeconds: {{ .Values.probes.readiness.periodSeconds }}
          {{- end }}

      volumes:
        - name: config
          configMap:
            name: vault-config

  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - ReadWriteOnce
        storageClassName: {{ .Values.server.dataStorage.storageClass }}
        resources:
          requests:
            storage: {{ .Values.server.dataStorage.size }}

    - metadata:
        name: audit
      spec:
        accessModes:
          - ReadWriteOnce
        storageClassName: {{ .Values.server.auditStorage.storageClass }}
        resources:
          requests:
            storage: {{ .Values.server.auditStorage.size }}
