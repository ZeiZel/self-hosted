apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongodb
  namespace: {{ .Values.namespace }}
spec:
  serviceName: mongodb-headless
  replicas: {{ .Values.mongodb.replicaCount }}
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
      {{- if .Values.consul.enabled }}
      annotations:
        consul.hashicorp.com/connect-inject: "true"
        consul.hashicorp.com/connect-service-port: "27017"
      {{- end }}
    spec:
      serviceAccountName: mongodb
      securityContext:
        runAsUser: 999
        fsGroup: 999
      containers:
        - name: mongodb
          image: {{ .Values.mongodb.image }}
          imagePullPolicy: IfNotPresent
          command:
            - mongod
            - --replSet={{ .Values.mongodb.replicaSet }}
            - --bind_ip_all
            - --storageEngine=wiredTiger
            {{- if .Values.mongodb.auth.enabled }}
            - --auth
            {{- end }}
          ports:
            - containerPort: {{ .Values.mongodb.service.port }}
              name: mongodb
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              {{- if .Values.mongodb.auth.enabled }}
              valueFrom:
                secretKeyRef:
                  name: mongodb-secret
                  key: username
              {{- else }}
              value: ""
              {{- end }}
            - name: MONGO_INITDB_ROOT_PASSWORD
              {{- if .Values.mongodb.auth.enabled }}
              valueFrom:
                secretKeyRef:
                  name: mongodb-secret
                  key: password
              {{- else }}
              value: ""
              {{- end }}
          resources:
            {{- toYaml .Values.mongodb.resources | nindent 12 }}
          volumeMounts:
            - name: datadir
              mountPath: {{ .Values.persistence.mountPath }}
            - name: config
              mountPath: /etc/mongodb
          livenessProbe:
            exec:
              command:
                - mongosh
                - --eval
                - "db.adminCommand('ping')"
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
          readinessProbe:
            exec:
              command:
                - mongosh
                - --eval
                - "db.adminCommand('ping')"
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3

      initContainers:
        - name: init-replica-set
          image: {{ .Values.mongodb.image }}
          command:
            - sh
            - -c
            - |
              sleep 30
              mongosh <<EOF
              {{- include "mongodb.initReplicaSet" . | nindent 14 }}
              EOF
          volumeMounts:
            - name: config
              mountPath: /etc/mongodb

      volumes:
        - name: config
          configMap:
            name: mongodb-init
        - name: datadir
          persistentVolumeClaim:
            claimName: mongodb-datadir-0

  volumeClaimTemplates:
    - metadata:
        name: datadir
      spec:
        accessModes:
          - {{ .Values.persistence.accessMode }}
        storageClassName: {{ .Values.persistence.storageClass }}
        resources:
          requests:
            storage: {{ .Values.persistence.size }}

---
{{- if .Values.arbiter.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongodb-arbiter
  namespace: {{ .Values.namespace }}
spec:
  serviceName: mongodb-arbiter-headless
  replicas: 1
  selector:
    matchLabels:
      app: mongodb-arbiter
  template:
    metadata:
      labels:
        app: mongodb-arbiter
      {{- if .Values.consul.enabled }}
      annotations:
        consul.hashicorp.com/connect-inject: "true"
        consul.hashicorp.com/connect-service-port: "27017"
      {{- end }}
    spec:
      serviceAccountName: mongodb
      containers:
        - name: mongodb-arbiter
          image: {{ .Values.mongodb.image }}
          command:
            - mongod
            - --replSet={{ .Values.mongodb.replicaSet }}
            - --bind_ip_all
          ports:
            - containerPort: {{ .Values.mongodb.service.port }}
              name: mongodb
          resources:
            limits:
              cpu: 250m
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 128Mi
          livenessProbe:
            exec:
              command:
                - mongosh
                - --eval
                - "db.adminCommand('ping')"
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            exec:
              command:
                - mongosh
                - --eval
                - "db.adminCommand('ping')"
            initialDelaySeconds: 10
            periodSeconds: 5

      volumeClaimTemplates:
        - metadata:
            name: datadir
          spec:
            accessModes:
              - {{ .Values.persistence.accessMode }}
            storageClassName: {{ .Values.persistence.storageClass }}
            resources:
              requests:
                storage: 5Gi
{{- end }}
