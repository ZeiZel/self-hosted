---

x-env-files: &env-files
  - .env

services:
  # SSL + reverse_proxy
  caddy:
    env_file: *env-files
    build:
      context: .
    extends:
      file: ./docker/caddy.yml
      service: caddy

  # DASHBOARD

  dashy:
    depends_on:
      - caddy
    build:
      context: .
    extends:
      file: ./docker/dashy.yml
      service: dashy

  # TASKTRACKING

  youtrack:
    profiles: [ all, tasktracking ]
    depends_on:
      - caddy
    build:
      context: .
    extends:
      file: ./docker/youtrack.yml
      service: youtrack

  # MAIL

#  mail:
#    profiles: [ all, mail ]
#    depends_on:
#      - caddy
#    build:
#      context: .
#    extends:
#      file: ./docker/mailer.yml
#      service: stalwart-mail

  # SERVICE

  watchtower:
    build:
      context: .
    extends:
      file: ./docker/service/watchtower.yml
      service: watchtower

  autoheal:
    build:
      context: .
    extends:
      file: ./docker/service/autoheal.yml
      service: autoheal

  validate:
    env_file: *env-files
    build:
      context: .
    extends:
      file: ./docker/service/validate.yml
      service: validate

  # DB

#  minio:
#    profiles: [ all, db ]
#    depends_on:
#      validate:
#        condition: service_completed_successfully
#    build:
#      context: .
#    extends:
#      file: ./docker/db/minio.yml
#      service: minio
#
#  postgres:
#    profiles: [ all, db ]
#    build:
#      context: .
#    extends:
#      file: ./docker/db/postgresql.yml
#      service: postgres
#
#  redis:
#    profiles: [ all, db ]
#    build:
#      context: .
#    extends:
#      file: ./docker/db/redis.yml
#      service: redis
#
#  mongo:
#    profiles: [ all, db ]
#    depends_on:
#      caddy:
#        condition: service_started
#      validate:
#        condition: service_completed_successfully
#    build:
#      context: .
#    extends:
#      file: ./docker/db/mongo.yml
#      service: mongo
#
#  createbuckets:
#    profiles: [ all, db ]
#    depends_on:
#      - minio
#    build:
#      context: .
#    extends:
#      file: ./docker/db/createbuckets.yml
#      service: createbuckets

  # VAULT

#  vaultwarden:
#    profiles: [ all, vault ]
#    depends_on: [ caddy, smtp, watchtower, postgres ]
#    build:
#      context: .
#    extends:
#      file: ./docker/vaultwarden.yml
#      service: vaultwarden

  # CHAT

#  revolt-ui:
#    profiles: [ all, chat ]
#    depends_on: [ caddy, mongo, redis, rmq, minio, crond, createbuckets ]
#    build:
#      context: .
#    extends:
#      file: ./docker/chat/revolt.yml
#      service: web
#
#  revolt-api:
#    profiles: [ all, chat ]
#    depends_on: [ caddy, mongo, redis, rmq, minio, crond, createbuckets ]
#    build:
#      context: .
#    extends:
#      file: ./docker/chat/revolt.yml
#      service: api
#
#  revolt-events:
#    profiles: [ all, chat ]
#    depends_on: [ caddy, mongo, redis, rmq, minio, crond, createbuckets ]
#    build:
#      context: .
#    extends:
#      file: ./docker/chat/revolt.yml
#      service: events
#
#  revolt-push-daemon:
#    profiles: [ all, chat ]
#    depends_on: [ caddy, mongo, redis, rmq, minio, crond, createbuckets ]
#    build:
#      context: .
#    extends:
#      file: ./docker/chat/revolt.yml
#      service: pushd
#
#  revolt-jan:
#    profiles: [ all, chat ]
#    depends_on: [ caddy, mongo, redis, rmq, minio, crond, createbuckets ]
#    build:
#      context: .
#    extends:
#      file: ./docker/chat/revolt.yml
#      service: january
#
#  revolt-autumn:
#    profiles: [ all, chat ]
#    depends_on: [ caddy, mongo, redis, rmq, minio, crond, createbuckets ]
#    build:
#      context: .
#    extends:
#      file: ./docker/chat/revolt.yml
#      service: autumn

  # GITLAB

#  gitlab:
#    profiles: [ all, gitlab ]
#    depends_on:
#      - caddy
#    build:
#      context: .
#    extends:
#      file: ./docker/gitlab/gitlab.yml
#      service: gitlab

  # SYNC

#  syncthing:
#    profiles: [ all, sync ]
#    depends_on:
#      - caddy
#    build:
#      context: .
#    extends:
#      file: ./docker/syncthing.yml
#      service: syncthing
#
#  syncthing-exporter:
#    profiles: [ all, sync ]
#    build:
#      context: .
#    extends:
#      file: ./docker/syncthing.yml
#      service: syncthing-exporter

  # LOGGING

  elastic:
    profiles: [ all, logging ]
    depends_on:
      - caddy
    build:
      context: .
    extends:
      file: ./docker/logging/elasticsearch.yml
      service: elasticsearch

  filebeat:
    profiles: [ all, logging ]
    depends_on:
      - caddy
    build:
      context: .
    extends:
      file: ./docker/logging/filebeat.yml
      service: filebeat

  kibana:
    profiles: [ all, logging ]
    depends_on:
      - caddy
    build:
      context: .
    extends:
      file: ./docker/logging/kibana.yml
      service: kibana

  logstash:
    profiles: [ all, logging ]
    depends_on:
      - caddy
    build:
      context: .
    extends:
      file: ./docker/logging/logstash.yml
      service: logstash

  # MONITORING

  prometheus:
    profiles: [ all, monitoring ]
    depends_on:
      - caddy
    build:
      context: .
    extends:
      file: ./docker/monitoring/prometheus.yml
      service: prometheus
    labels:
      org.label-schema.group: "monitoring"

  grafana:
    profiles: [ all, monitoring ]
    build:
      context: .
    extends:
      file: ./docker/monitoring/grafana.yml
      service: grafana
    labels:
      org.label-schema.group: "monitoring"

  nodeexporter:
    profiles: [ all, monitoring ]
    depends_on:
      - caddy
    build:
      context: .
    extends:
      file: ./docker/monitoring/node-exporter.yml
      service: nodeexporter
    labels:
      org.label-schema.group: "monitoring"

  cadvisor:
    profiles: [ all, monitoring ]
    depends_on:
      - caddy
    build:
      context: .
    extends:
      file: ./docker/monitoring/cadvisor.yml
      service: cadvisor
    labels:
      org.label-schema.group: "monitoring"

  alertmanager:
    profiles: [ all, monitoring ]
    depends_on:
      - caddy
    build:
      context: .
    extends:
      file: ./docker/monitoring/alertmanager.yml
      service: alertmanager
    labels:
      org.label-schema.group: "monitoring"

  blackbox:
    profiles: [ all, monitoring ]
    depends_on:
      - caddy
    build:
      context: .
    extends:
      file: ./docker/monitoring/blackbox.yml
      service: blackbox
    labels:
      org.label-schema.group: "monitoring"

  pushgateway:
    profiles: [ all, monitoring ]
    depends_on:
      - caddy
    build:
      context: .
    extends:
      file: ./docker/monitoring/pushgateway.yml
      service: pushgateway
    labels:
      org.label-schema.group: "monitoring"

networks:
  monitoring-net:
  caddy-net:
  gitlab-net:
  notesnook-net:
  shared-net:
    driver: bridge
  syncthing-net:
    driver: bridge
  db-net:
    name: db-net
    driver: bridge
