---
x-env-files: &env-files [.env]
services:
  # SSL + reverse_proxy
  caddy:
    env_file: *env-files
    build:
      context: .
    extends:
      file: ./docker/caddy.yml
      service: caddy

  # DASHBOARD
  dashy:
    profiles: [all]
    depends_on: [caddy]
    build:
      context: .
    extends:
      file: ./docker/dashy.yml
      service: dashy

  # TASKTRACKING
  youtrack:
    profiles: [all, tasktracking]
    depends_on: [caddy]
    build:
      context: .
    extends:
      file: ./docker/youtrack.yml
      service: youtrack

  # SERVICE
  watchtower:
    build:
      context: .
    extends:
      file: ./docker/service/watchtower.yml
      service: watchtower
  autoheal:
    build:
      context: .
    extends:
      file: ./docker/service/autoheal.yml
      service: autoheal
  validate:
    env_file: *env-files
    build:
      context: .
    extends:
      file: ./docker/service/validate.yml
      service: validate

  # DB
  bytebase:
    profiles: [all, db]
    build:
      context: .
    extends:
      file: ./docker/db/bytebase.yml
      service: bytebase
  minio:
    profiles: [all, db]
    build:
      context: .
    extends:
      file: ./docker/db/minio.yml
      service: minio
  postgres:
    profiles: [all, db, pgsql]
    build:
      context: .
    extends:
      file: ./docker/db/postgresql.yml
      service: postgres
  redis:
    profiles: [all, db]
    build:
      context: .
    extends:
      file: ./docker/db/redis.yml
      service: redis
  mongo:
    profiles: [all, db]
    build:
      context: .
    extends:
      file: ./docker/db/mongo.yml
      service: mongo
  createbuckets:
    profiles: [all, db]
    depends_on: [minio]
    build:
      context: .
    extends:
      file: ./docker/db/createbuckets.yml
      service: createbuckets

  # BROKERS
  rabbit:
    profiles: [all, brokers]
    depends_on: [caddy]
    build:
      context: .
    extends:
      file: ./docker/message-brokers/rmq.yml
      service: rabbit

  # VAULT
  vaultwarden:
    profiles: [all, vault]
    depends_on: [caddy]
    build:
      context: .
    extends:
      file: ./docker/vaultwarden.yml
      service: vaultwarden

  # CHAT
  api:
    profiles: [all, chat]
    build:
      context: .
    extends:
      file: ./docker/chat/revolt.yml
      service: api
  events:
    profiles: [all, chat]
    build:
      context: .
    extends:
      file: ./docker/chat/revolt.yml
      service: events
  web:
    profiles: [all, chat]
    depends_on: [caddy]
    build:
      context: .
    extends:
      file: ./docker/chat/revolt.yml
      service: web
  autumn:
    profiles: [all, chat]
    build:
      context: .
    extends:
      file: ./docker/chat/revolt.yml
      service: autumn
  january:
    profiles: [all, chat]
    depends_on: [caddy]
    build:
      context: .
    extends:
      file: ./docker/chat/revolt.yml
      service: january
  crond:
    profiles: [all, chat]
    depends_on: [caddy]
    build:
      context: .
    extends:
      file: ./docker/chat/revolt.yml
      service: crond
  pushd:
    profiles: [all, chat]
    depends_on: [caddy]
    build:
      context: .
    extends:
      file: ./docker/chat/revolt.yml
      service: pushd

  # GITLAB
#  gitlab:
#    profiles: [ all, gitlab ]
#    depends_on:
#      - caddy
#    build:
#      context: .
#    extends:
#      file: ./docker/gitlab/gitlab.yml
#      service: gitlab

  # SYNC

#  syncthing:
#    profiles: [ all, sync ]
#    depends_on:
#      - caddy
#    build:
#      context: .
#    extends:
#      file: ./docker/syncthing.yml
#      service: syncthing
#
#  syncthing-exporter:
#    profiles: [ all, sync ]
#    build:
#      context: .
#    extends:
#      file: ./docker/syncthing.yml
#      service: syncthing-exporter

  # MAIL
  #  mail:
  #    profiles: [ all, mail ]
  #    depends_on:
  #      - caddy
  #    build:
  #      context: .
  #    extends:
  #      file: ./docker/mailer.yml
  #      service: stalwart-mail

  # LOGGING
  elasticsearch:
    profiles: [all, logging]
    build:
      context: .
    extends:
      file: ./docker/logging/elasticsearch.yml
      service: elasticsearch
  filebeat:
    profiles: [all, logging]
    build:
      context: .
    extends:
      file: ./docker/logging/filebeat.yml
      service: filebeat
  kibana:
    profiles: [all, logging]
    build:
      context: .
    extends:
      file: ./docker/logging/kibana.yml
      service: kibana
  logstash:
    profiles: [all, logging]
    build:
      context: .
    extends:
      file: ./docker/logging/logstash.yml
      service: logstash

  # MONITORING
  prometheus:
    profiles: [all, monitoring]
    depends_on: [caddy]
    build:
      context: .
    extends:
      file: ./docker/monitoring/prometheus.yml
      service: prometheus
    labels:
      org.label-schema.group: monitoring
  grafana:
    profiles: [all, monitoring]
    build:
      context: .
    extends:
      file: ./docker/monitoring/grafana.yml
      service: grafana
    labels:
      org.label-schema.group: monitoring
  nodeexporter:
    profiles: [all, monitoring]
    depends_on: [caddy]
    build:
      context: .
    extends:
      file: ./docker/monitoring/node-exporter.yml
      service: nodeexporter
    labels:
      org.label-schema.group: monitoring
  cadvisor:
    profiles: [all, monitoring]
    depends_on: [caddy]
    build:
      context: .
    extends:
      file: ./docker/monitoring/cadvisor.yml
      service: cadvisor
    labels:
      org.label-schema.group: monitoring
  alertmanager:
    profiles: [all, monitoring]
    depends_on: [caddy]
    build:
      context: .
    extends:
      file: ./docker/monitoring/alertmanager.yml
      service: alertmanager
    labels:
      org.label-schema.group: monitoring
  blackbox:
    profiles: [all, monitoring]
    depends_on: [caddy]
    build:
      context: .
    extends:
      file: ./docker/monitoring/blackbox.yml
      service: blackbox
    labels:
      org.label-schema.group: monitoring
  pushgateway:
    profiles: [all, monitoring]
    depends_on: [caddy]
    build:
      context: .
    extends:
      file: ./docker/monitoring/pushgateway.yml
      service: pushgateway
    labels:
      org.label-schema.group: monitoring

  # SERVICE DISCOVERY
  consul-server:
    profiles: [all, discovery]
    depends_on: [caddy]
    build:
      context: .
    extends:
      file: ./docker/SD/consul.yml
      service: consul-server
    labels:
      org.label-schema.group: SD
  consul-agent:
    profiles: [all, discovery]
    build:
      context: .
    extends:
      file: ./docker/SD/consul.yml
      service: consul-agent
    labels:
      org.label-schema.group: SD
  consul-exporter:
    profiles: [all, discovery]
    build:
      context: .
    extends:
      file: ./docker/SD/consul.yml
      service: consul-exporter
    labels:
      org.label-schema.group: SD
  registrator:
    profiles: [all, discovery]
    extends:
      file: ./docker/SD/consul.yml
      service: registrator
    labels:
      org.label-schema.group: SD
  fabio:
    profiles: [all, discovery]
    build:
      context: .
    extends:
      file: ./docker/SD/consul.yml
      service: fabio
    labels:
      org.label-schema.group: SD
networks:
  broker-net:
  consul-net:
  monitoring-net:
  logging-net:
  caddy-net:
  gitlab-net:
  notesnook-net:
  shared-net:
    driver: bridge
  syncthing-net:
    driver: bridge
  db-net:
    name: db-net
    driver: bridge
